#!/usr/local/bin/cbsd
#v12.0.4
CBSDMODULE="bsdconf"
MYARG=""
MYOPTARG="jname fromfile"
MYDESC="cbsd sysrc wrapper"
ADDHELP="jname= work in with jail\n\
fromfile - include file for read sysrc_enable, sysrc_disable list\n"
EXTHELP="modules/bsdconf.d"

. ${subr}
. ${cbsdinit}
. ${system}

#defines
_MYDIR=$( ${DIRNAME_CMD} `${REALPATH_CMD} $0` )

emulator="jail" # for jname_is_multiple
jail_list=
jname_is_multiple

# -n "name of the tools" - show <name> in Info string, e.g: -n jexec, -n "pkg install" ...
# -o uniq_name_of_the_task (one world)
sysrc_multi_init()
{
	local _jname

	while getopts "c:n:o:" opt; do
		case "${opt}" in
			c) cmd="${OPTARG}" ;;
			n) _multiple_consumer_name="${OPTARG}" ;;
			o) task_owner="${OPTARG}" ;;
		esac
		shift $(($OPTIND - 1))
	done

	[ -z "${task_owner}" ] && err 1 "${N1_COLOR}multiple_processing_spawn: empty -o multiple_task_owner${N0_COLOR}"

	. ${distdir}/multiple.subr
	${ECHO} "${N1_COLOR}Hint: Press ${N2_COLOR}'Ctrl+t'${N1_COLOR} to see last logfile line for active task${N0_COLOR}" 1>&2
	task_id=
	task_id_cur=
	task_owner="${task_owner}"
	# spawn command for all jail
	for _jname in ${jail_list}; do
		task_id_cur=$( task mode=new logfile=${tmpdir}/${task_owner}.${_jname}.log.$$ client_id=${_jname} autoflush=0 owner=${task_owner} /usr/bin/env NOCOLOR=1 /usr/local/bin/cbsd sysrc jname=${_jname} ${cmd} 2>/dev/null )
		sleep 0.1               # dont brute taskdb
		if ! is_number "${task_id_cur}"; then
			task_id="${task_id} ${task_id_cur}"
		fi
	done

	multiple_task_id_all=$( echo ${task_id} | ${TR_CMD} " " "," )
	sleep 0.5
	multiple_processing_spawn -o ${task_owner} -n "${_multiple_consumer_name}"
}

# MAIN for multiple jails
if [ -n "${jail_list}" ]; then
	# multiple
	if [ -n "${jail_list}" ]; then
		JLIST="${jail_list}"
	fi

	task_owner="sysrc_multiple_query"
	_args=

	# trim for jname= in "$*"
	for i in $*; do
		prefix=
		prefix=$( substr --pos=0 --len=6 --str="${i}" )
		[ "${prefix}" = "jname=" ] && continue
		if [ -n "${_args}" ]; then
			_args="${_args} ${i}"
		else
			_args="${i}"
		fi
	done
	sysrc_multi_init -c "${_args}" -o ${task_owner} -n "sysrc query"

	err 0 "${N1_COLOR}Multiple sysrc: ${N2_COLOR}done${N0_COLOR}"
fi

ARGS=

# exclude jname= and mode= params from args str
INIT_IFS="${IFS}"
IFS="~"
cmd="$@"
IFS="${INIT_IFS}"
ARGS=$( while [ -n "${1}" ]; do
	IFS="~"
	strpos --str="${1}" --search="="
	_pos=$?
	if [ ${_pos} -eq 0 ]; then
		# not params=value form
		#printf "${1} "         # (printf handles -args (with dashes)
		echo -n "${1} "
		shift
		continue
	fi

	_arg_len=$( strlen ${1} )
	_pref=$(( _arg_len - _pos ))
	ARG=$( substr --pos=0 --len=${_pos} --str="${1}" )
	VAL=$( substr --pos=$(( ${_pos} +2 )) --len=${_pref} --str="${1}" )

	case ${ARG} in
		fromfile|jname)
			shift
			continue
			;;
	esac

	printf "${ARG}=${VAL} "
	shift
done )

if [ -n "${fromfile}" ]; then
	if [ -r "${fromfile}" ]; then
		. ${fromfile}
	else
		err 1 "${N1_COLOR}${CBSD_APP}: unable to open fromfile: ${N2_COLOR}${fromfile}${N0_COLOR}"
	fi
fi

[ -z "${ARGS}" -a -z "${fromfile}" ] && err 1 "${N1_COLOR}Empty command${N0_COLOR}"

## MAIN ##
if [ -n "${jname}" ]; then
	. ${jrcconf}
	[ $? -eq 1 ] && err 1 "${N1_COLOR}No such jail: ${N2_COLOR}${jname}${N0_COLOR}"

	[ ${baserw} -eq 1 ] && path=${data}

	if [ ${jid} -eq 0 ]; then
		set -e
			. ${_MYDIR}/bsdconf.subr
		set +e
		. ${distdir}/universe.subr
		readconf buildworld.conf
		init_target_arch
		init_srcdir
		init_basedir
		init_kerneldir
		prepare_jail
	fi
	exec_cmd="${CHROOT_CMD} ${path} ${SYSRC_CMD} -f /etc/rc.conf"
else
	data=
	exec_cmd="${SYSRC_CMD}"
fi

[ ! -f "${data}/etc/rc.conf" ] && ${TOUCH_CMD} ${data}/etc/rc.conf
if [ -z "${fromfile}" ];then
	${exec_cmd} ${ARGS}
fi

for i in ${sysrc_enable}; do
	${exec_cmd} ${i}_enable="YES"
done

for i in ${sysrc_disable}; do
	${exec_cmd} ${i}_enable="NO"
done
