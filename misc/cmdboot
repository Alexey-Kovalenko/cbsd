#!/bin/sh
# Re-generate external executable cmd macros:
# different platforms may have different full/realpaths
: ${distdir="/usr/local/cbsd"}
# MAIN
if [ -z "${workdir}" ]; then
	[ -z "${cbsd_workdir}" ] && . /etc/rc.conf
	[ -z "${cbsd_workdir}" ] && exit 0
	workdir="${cbsd_workdir}"
fi

[ ! -f "${distdir}/cbsd.conf" ] && exit 0

. ${distdir}/cbsd.conf

CMD_FILE=${workdir}/cmd.subr
export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

# Hardened/FreeBSD/TrueOS-specific CMD
add_freebsd_cmd()
{
	MAIN_CMD="${MAIN_CMD} \
acpidump \
devfs \
dpv \
etcupdate \
getent \
zfs \
zpool \
ipfw \
cpuset \
geli \
growfs \
gpart \
jexec \
lockf \
login \
makefs \
mkimg \
mkuzip \
newfs \
newfs_msdos \
ndp \
sockstat \
rctl \
setfib \
"
}

# DragonflyBSD-specific CMD
add_dragonfly_cmd()
{
	MAIN_CMD="${MAIN_CMD} \
hammer2 \
"
}

#  optional/feature command
OPTIONAL_CMD="\
bhyvectl \
bhyve \
bsdlabel \
git \
jail \
xl"

# main cmd: generic command for all platform
MAIN_CMD="\
arp \
awk \
basename \
cat \
cc \
chown \
chflags \
chmod \
chroot \
column \
cp \
cpio \
cut \
daemon \
date \
dd \
df \
du \
dirname \
egrep \
env \
fetch \
find \
file \
grep \
gzip \
gunzip \
head \
hexdump \
hostname \
id \
idprio \
ifconfig \
install \
jot \
kenv \
kill \
killall \
kldload \
kldstat \
ldd \
ln \
ls \
make \
md5 \
mdconfig \
mkdir \
mtree \
mktemp \
mount \
mv \
nc \
newfs \
nice \
pax \
pciconf \
ps \
ping \
pw \
pwd \
readlink \
realpath \
rm \
rmdir \
route \
rsync \
scp \
sed \
seq \
service \
sort \
sha256 \
ssh \
ssh-keygen \
stat \
strings \
stty \
su \
sysctl \
sysrc \
stty \
sqlite3 \
tail \
tar \
tee \
timeout \
touch \
uname \
tr \
truncate \
umount \
uuidgen \
whoami \
xargs \
uuencode \
xz \
xzcat \
wc \
"

# check by FreeBSD version, since the misc/elf_tables may be absent on first init
_version=$( sysctl -n kern.osreldate 2>/dev/null )

if [ ${_version} -lt 1300131 ]; then
	# https://svnweb.freebsd.org/base?view=revision&revision=r368045
	MAIN_CMD="${MAIN_CMD} ping6"
fi

case "${platform}" in
	FreeBSD|HardenedBSD|TrueOS)
		add_freebsd_cmd
		;;
	DragonFly)
		add_dragonfly_cmd
		;;
esac

truncate -s0 ${CMD_FILE}

cat > ${CMD_FILE} <<EOF
if [ ! "\$_CBSD_CMD_SUBR" ]; then
_CBSD_CMD_SUBR=1
###
EOF

MAIN_CMD=$( echo ${MAIN_CMD} | sort )
OPTIONAL_CMD=$( echo ${OPTIONAL_CMD} | sort )

for i in ${MAIN_CMD}; do
	mycmd=
	mycmd=$( which ${i} 2>/dev/null )

	if [ -z "${mycmd}" -a ! -x "${mycmd}" ]; then
		echo "cmdboot: no such executable, CBSD dependency/requirement: ${i}"
		exit 1
	fi
	MY_CMD=$( echo ${i} | tr '\-[:lower:]' '_[:upper:]' )
	MY_CMD="${MY_CMD}_CMD"

	echo "${MY_CMD}=\"${mycmd}\"" >> ${CMD_FILE}
done

for i in ${OPTIONAL_CMD}; do
	mycmd=
	mycmd=$( which ${i} 2>/dev/null )

	if [ -z "${mycmd}" -a ! -x "${mycmd}" ]; then
		feature=
		case "${i}" in
			bhyve*)
				feature="bhyve_feat"
				;;
			jail)
				feature="jail_feat"
				;;
			xl)
				feature="xen_feat"
				;;
		esac

		if [ -n "${feature}" ]; then
			if [ -h ${dbdir}/local.sqlite ]; then
				echo "    cmdboot: no such optional executable: ${i}, ${feature} disabled"
				sqlite3 ${dbdir}/local.sqlite "UPDATE local SET ${feature}=\"0\""
			fi
		fi
	fi

	MY_CMD=$( echo ${i} | tr '\-[:lower:]' '_[:upper:]' )
	MY_CMD="${MY_CMD}_CMD"

	echo "${MY_CMD}=\"${mycmd}\"" >> ${CMD_FILE}

done

cat >> ${CMD_FILE} <<EOF
###
fi
EOF
