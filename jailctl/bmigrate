#!/usr/local/bin/cbsd
#v11.2.0
MYARG="jname node"
MYOPTARG=""
MYDESC="bhyve live migration"
CBSDMODULE="bhyve"
ADDHELP=""

. ${subr}
. ${tools}
. ${strings}
. ${nodes}

init $*

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such domains: ${GREEN}${jname}${NORMAL}"
[ "${emulator}" != "bhyve" ] && log_err 1 "${MAGENTA}Not in bhyve mode${NORMAL}"

remote_node_rip=$( cbsdsql nodes SELECT ip FROM nodelist WHERE nodename=\"${node}\" )
[ -z "${remote_node_rip}" ] && log_err 1 "${MAGENTA}bmigrate: no such node ${node}. Please add node via: ${GREEN}cbsd add node=${node}${NORMAL}"

remote_node_ip=$( getinfo mode=quiet nodeip )

${ECHO} "  ${GREEN}Data gathering for live migration${NORMAL}"
printf "   ${LCYAN}* ${MAGENTA}check for remote CBSD version: ${NORMAL}"
d_cbsd_ver=$( rexe node=${node} /usr/local/bin/cbsd -c version 2>/dev/null | /usr/bin/tr -d \\r | /usr/bin/awk '/./{print $1}' )
[ $? -ne 0 ] && err 1 "${MAGENTA}bmigrate: failed: rexe node=${node}${NORMAL}"
printf "${LYELLOW}ok${NORMAL}"
echo
s_cbsd_ver=$( version | /usr/bin/awk '/./{print $1}' )

shared_dir="jails-data jails-rcconf jails-system"

${ECHO} "   ${LCYAN}* ${MAGENTA}check for shared storage: ${NORMAL}"

for i in ${shared_dir}; do
	printf "      ${LCYAN}* ${GREEN}${i}: ${NORMAL}"
	check_for_shared_dir -d ${i} -n ${node} || err 1 "${MAGENTA}directory id do not match, dir not shared: ${GREEN}${i}${MAGENTA} ?${NORMAL}"
	printf "${LYELLOW}ok${NORMAL}"
	echo
done

source_vm_name="${jname}"
dest_vm_name="${jname}"

LOCAL_FS="local,shared"
REMOTE_FS="local,shared"
s_migrator_ver="0.1"
d_migrator_ver="0.1"

my_nodename=$( /bin/cat ~cbsd/nodename )
remote_node_name="${node}"

DC_NAME="local"
if [ ${jid} -ne 0 ]; then
	jail_status="active"
else
	jail_status="offline"
fi

echo
${ECHO} "  ${GREEN}Data gathering complete!${NORMAL}"
srcpad=" "
destpad=" "

/bin/cat <<XxX1387784305xXx

We will be migrating:
     INSTANCE:
               jname:  ${jname}
                fqdn:  ${host_hostname}
          IP Addr(s):  ${ip4_addr}
          datacenter:  ${DC_NAME}
      instance state:  ${jail_status}
                type:  ${emulator}
               owner:  root
           create at:  -
          base image:  -
  total dataset size:  ${SZMDS} ${rise} across ${dsCNT} datasets
        migration id:  $$
XxX1387784305xXx

/bin/cat <<XxX1394397713xXx

                    Source                                        Destination
----------------------------------------------  ----------------------------------------------
XxX1394397713xXx
printf "Host:     %-36s  Host:     %-36s\n" ${my_nodename} ${remote_node_name}
printf "JNAME:    %-36s  JNAME:    %-36s\n" ${source_vm_name} ${dest_vm_name}
printf "SDC Ver:  %-36s  SDC Ver:  %-36s\n" ${s_cbsd_ver} ${d_cbsd_ver}
printf "IP Addr:  %-36s  IP Addr:  %-36s\n" ${remote_node_ip} ${remote_node_rip}
printf "RemoteFS: %-36s  RemoteFS: %-36s\n" ${LOCAL_FS} ${REMOTE_FS}
printf "API ver:  %-36s  API ver:  %-36s\n" ${s_migrator_ver} ${d_migrator_ver}

echo

if getyesno "Are you ready to proceed? "; then
	echo
else
	${ECHO} "${MAGENTA}Exiting.${NORMAL}"
	exit 1
fi

${ECHO} ${MAGENTA} "  ${GREEN}Preparing destination node...${NORMAL}"
${ECHO} "${CYAN}[debug]remote cmd: /usr/sbin/bhyve -c 1 -m 1073741824 -H -A -s 0:0,hostbridge -s 2:0,virtio-blk,/usr/jails/jails-data/freebsd1-data/dsk1.vhd,sectorsize=512 -s 6,fbuf,tcp=127.0.0.1:5900,w=1024,h=768 -s 31,lpc -l com1,stdio -l bootrom,/usr/local/cbsd/upgrade/patch/efi.fd -R 192.168.84.96,24983 freebsd1${NORMAL}"

printf "   ${LCYAN}* ${MAGENTA}Phase1: launch bhyve on remote node ... ${NORMAL}"

r_task_id=$( rexe node=${node} cbsd task mode=new owner=migration.$$ /usr/sbin/bhyve -c 1 -m 1073741824 -H -A -s 0:0,hostbridge -s 2:0,virtio-blk,/usr/jails/jails-data/freebsd1-data/dsk1.vhd,sectorsize=512 -s 5:0,virtio-rnd -s 6,fbuf,tcp=127.0.0.1:5900,w=1024,h=768,password=cbsd -s 30,xhci,tablet -s 31,lpc -l com1,stdio -l bootrom,/usr/local/cbsd/upgrade/patch/efi.fd -R 192.168.84.96,24983 freebsd1 | /usr/bin/tr -d \\r | /usr/bin/awk '/./{print $1}' )

[ -z "${r_task_id}" ] && err 1 "${MAGENTA}cbsd task on ${node} failed${NORMAL}"

printf "${LYELLOW}ok${NORMAL}"
echo
printf "   ${LCYAN}* ${MAGENTA}Phase2: waiting for bhyve instance ready by task id ${r_task_id} ${NORMAL}"

max_attempt=15
cur_attempt=0

for i in $( /usr/bin/seq 1 10 ); do
	cur_attempt=$(( cur_attempt + 1 ))
	#echo "rexe node=${node} /usr/local/bin/sqlite3 ~cbsd/var/db/cbsdtaskd.sqlite SELECT status FROM taskd WHERE id=\"${r_task_id}\""
	r_job_status=$( cbsd rexe node=${node} misc/sqlcli var/db/cbsdtaskd.sqlite "SELECT status FROM taskd WHERE id=${r_task_id}" 2>/dev/null | /usr/bin/tr -d \\r | /usr/bin/awk '/./{print $1}' )
	if [ "${r_job_status}" != "2" ]; then
		printf "${MAGENTA}.${NORMAL}"
		sleep 1
	else
		printf "${LYELLOW} ok${NORMAL}"
		break
	fi
	[ ${cur_attempt} -gt ${max_attempt} ] && err 1 "${MAGENTA}Taskd timeout, max attempt exceeded: ${GREEN}${cur_attempt}${MAGENTA}. Please check on node ${GREEN}${node}${MAGENTA}: ${GREEN}cbsd taskls${NORMAL}"
done

r_job_logfile=$( cbsd rexe node=${node} misc/sqlcli var/db/cbsdtaskd.sqlite "SELECT logfile FROM taskd WHERE id=${r_task_id}" 2>/dev/null | /usr/bin/tr -d \\r | /usr/bin/awk '/./{print $1}' )
${ECHO} "   ${LCYAN}* ${MAGENTA}Phase3: migration: bhyvectl --migrate=${remote_node_rip},24983 --vm=${jname}${NORMAL}"
bhyvectl --migrate=${remote_node_rip},24983 --vm=${jname}
echo
sleep 3
${ECHO} "      ${MAGENTA}Remote log for taskid ${LYELLOW}${r_task_id}${MAGENTA}:${NORMAL}"
rexe node=${node} /bin/cat ${r_job_logfile}
echo
printf "   ${LCYAN}* ${MAGENTA}Phase3: migration to bhyve ${LYELLOW}${r_task_id} ${NORMAL}"
echo
${ECHO} "   ${LCYAN}* ${MAGENTA}Phase4: unregister ${jname} on ${my_nodename}${NORMAL}"
#bunregister jname=${jname}
${ECHO} "   ${LCYAN}* ${MAGENTA}Phase5: register ${jname} on ${remote_node_name}${NORMAL}"
#rexe node=${node} cbsd bregister jname=${jname}

#bunregister jname=${jname}
