#!/usr/local/bin/cbsd
#v11.1.11
CBSDMODULE="jail"
MYARG=""
MYOPTARG="alljails shownode display node header order"
MYDESC="List and show status of jails"
ADDHELP="alljails=1 - (0 or 1): force to display foreign/remote resources\n\
  when sqlreplica=1 and node available, alljails sets to 1 automatically\n\
shownode=1 - Show node name(s) for listed jails.\n\
node= List only jails of the specified node.\n\
header=0 Don't print header information.\n\
display= Comma separated list of columns to display. Default: jid,jname,ip4_addr,host_hostname,path,status\n\
  If sqlrepica and node available: nodename,jname,jid,vm_ram,vm_cpus,vm_os_type,ip4_addr,status,vnc_port\n\
  Additional: real_ip4\n\
order= asc (default) or desc\n"
EXTHELP="wf_jls"
MANPAGE="man cbsd-jls"

. ${subr}
. ${strings}
. ${tools}
. ${nodes}

readconf jls.conf
. ${cbsdinit}

[ ! -d "${workdir}" ] && err 1 "${N1_COLOR}jls: no such workdir: ${N2_COLOR}${workdir}${N0_COLOR}"

[ -n "${display}" ] && odisplay="${display}"	# store original display settings
oalljails="${alljails}"				# store original settings, they have more weight vs auto
oshownode="${shownode}"				# store original settings, they have more weight vs auto

is_cluster_mode
cluster_mode=$?		# cluster_mode=0 when we have any node

if [ ${cluster_mode} -eq 0 ]; then
	if [ "${oshownode}" != "0" ]; then
		alljails=1
		shownode=1
	fi
fi

# restore manual settings
[ -n "${oalljails}" ] && alljails="${oalljails}"
[ -n "${oshownode}" ] && alljails="${oshownode}"

[ -z "${display}" -a -z "${odisplay}" ] && display="jname,jid,ip4_addr,host_hostname,path,status"
[ "${shownode}" = "1" -a -z "${odisplay}" ] && display="nodename,${display}"

[ -z "${order}" ] && order="asc"

#remove commas for loop action on header
mydisplay=$( echo ${display} | ${TR_CMD} ',' '  ' )

# upper for header
myheader=$( echo ${mydisplay} | ${TR_CMD} '[:lower:]' '[:upper:]' )

JLS=""

show_header()
{
	local _header="${H1_COLOR}${BOLD}${myheader}${N0_COLOR}"
	[ ${header} -eq 1 ] && ${ECHO} ${_header}
}

# -j $jname
# -s alternative SQL file
# -u 1 - always show status as "Unregister"
populate_output_data()
{
	local active
	local unregister="0"
	local _node_is_online=0 _md5_node_name _tmp _x

	printf "${N0_COLOR}" # for column sort

	while getopts "j:s:u:" opt; do
		case "${opt}" in
			j) jname="${OPTARG}" ;;
			s) sqlfile="${OPTARG}" ;;
			u) unregister="1" ;;
		esac
		shift $(($OPTIND - 1))
	done

	[ -z "${sqlfile}" ] && sqlfile="local"
	active=$( cbsdsqlro ${sqlfile} SELECT jid FROM jails WHERE jname=\"${jname}\" )

	if [ "${sqlfile}" != "local" ]; then
		# pop status variable from node_is_online()
		_md5_node_name=$( ${MD5_CMD} -q -s ${sqlfile} )
		eval _node_is_online=\$node_${_md5_node_name}_online
		if [ "${_node_is_online}" = "1" ]; then
			if [ "${active}" != "0" ]; then
				printf "${N2_COLOR}"
			else
				printf "${N4_COLOR}"
			fi
		else
			printf "${DGRAY}"
		fi
	else
		if [ "${active}" != "0" ]; then
			printf "${N2_COLOR}"
		else
			printf "${N4_COLOR}"
		fi
	fi

	#populate values for in output string
	for _i in ${mydisplay}; do

		oll=$(( oll + 1 ))
		_val=

		# search for custom column output helper first
		if [ -x "${jailsysdir}/${jname}/facts.d/${_i}" ]; then
			. ${distdir}/jcreate.subr		# for export_jail_data_for_external_hook
			geniplist ${ip4_addr}			# for ipvX_first_public-like vars
			export_jail_data_for_external_hook
			_val=$( ${jailsysdir}/${jname}/facts.d/${_i} | ${HEAD_CMD} -1 | ${AWK_CMD} '{printf $1}' )
		else
			eval _val=\$$_i
			[ "${unregister}" = "1" -a "${_i}" = "status" ] && _val="Unregister"
			[ -z "${_val}" ] && _val="\-"

			case ${_i} in
				ip4_addr)
					_val=$( is_special_ip ${_val} )
					;;
				real_ip4)
					# real_ip is dynamic/pseudo field,
					# just get it in realtime
					_val=
					if [ ${jid} -gt 0 ]; then
						if [ -x ${path}${IFCONFIG_CMD} ]; then
							_tmp=$( ${JEXEC_CMD} ${jid} ${IFCONFIG_CMD} 2>/dev/null | ${SED_CMD} 's/[^a-zA-Z0-9:\. ]//g' | ${AWK_CMD} '/inet [0-9]+/{print $2}'| while read ip; do
								# skip for localhost
								[ "${ip}" = "127.0.0.1" ] && continue
								# cast 0.0.0.0 to nodeip ?
								#[ "${ip}" = "0.0.0.0" ] && ip="${nodeip}"
								printf "${ip} "
							done )
							# generate comma separated value
							if [ -n "${_tmp}" ]; then
								for _x in ${_tmp}; do
									if [ -z "${_val}" ]; then
										_val="${_x}"
									else
										_val="${_val},${_x}"
									fi
								done
							fi
						fi
					fi
					;;
			esac
		fi
		[ -z "${_val}" ] && _val="\-"
		printf "${_val} "
	done

	printf "${N0_COLOR}\n"
}

# $1 - which file from. Eg: local
show_jaildata_from_sql()
{
	local _i

	#   set sqlfile for ". rcconf" including
	if [ -n "${1}" ]; then
		sqlfile="$1"
	else
		sqlfile="local"
	fi

	cbsdsqlro ${sqlfile} SELECT jname FROM jails WHERE emulator=\"jail\" OR emulator=\"qemu-arm-static\" OR emulator=\"qemu-mips64-static\" OR emulator=\"qemu-aarch64-static\" ORDER BY jname ${order} | while read jname; do
		_status=""
		. ${jrcconf}

		[ "${baserw}" = "1" ] && path=${data}
		[ "${emulator}" = "bhyve" ] && continue
		[ "${emulator}" = "virtualbox" ] && continue

		conv_status
		populate_output_data -j ${jname} -s ${sqlfile}

	done
}

show_local()
{
	local _errcode _status

	show_header
	show_jaildata_from_sql local

	# Unregister area
	[ ! -d "${jailrcconfdir}" ] && return 0
	ip4_addr="-"
	host_hostname="-"
	path="-"
	jid="0"

	for J in $( ${LS_CMD} ${jailrcconfdir} ); do
		[ "${J}" = "dir.id" ] && continue
		jname=""
		[ ! -r ${jailrcconfdir}/${J} ] && continue
		. ${jailrcconfdir}/${J}
		# for jail only
		[ "${emulator}" != "jail" ] && continue
		[ -z "${jname}" ] && continue
		populate_output_data -u 1 -j ${jname}
		${ECHO} ${_status}
	done
}

show_remote()
{
	show_header

	[ -z "${node}" ] && node=$( cbsdsqlro nodes SELECT nodename FROM nodelist 2>/dev/null | ${XARGS_CMD} )

	for _n in ${node}; do
		nodename="${_n}"
		# init and export into $node_${md5_node_name}_online node status
		node_is_online -n ${nodename} -e 1
		show_jaildata_from_sql ${_n}
	done
}

show_jails()
{
	if [ -n "${node}" ]; then
		show_remote
		exit 0
	fi

	if [ "${alljails}" = "1" ]; then
		show_local
		header=0
		show_remote
	else
		show_local
	fi
}

#### MAIN
[ -z "${header}" ] && header=1
sqldelimer=" "

show_jails | ${COLUMN_CMD} -t
