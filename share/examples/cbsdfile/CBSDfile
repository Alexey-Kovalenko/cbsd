# CBSDfile sample for 'cbsd up' and 'cbsd destroy' command
# cbsd [up|destroy] <name>     - to deploy only <name> env
#
# Uncommend CLOUD_\* vars ro work remote API provider
#CLOUD_URL="https://us-sw.api.my.domain"
#CLOUD_ACCOUNT="bob"
#CLOUD_KEY_ID="SHA256:"
CLOUD_KEY=""

# run create/destroy in parallel?
# 0 - disabled
# any positive integer  - max simulative threads
PARALLEL=10

# verbose output ?
quiet=0

bhyve_vm1()
{
	vm_ram="4g"
	vm_cpus="2"
	imgsize="10g"
	vm_os_type="linux"
	vm_os_profile="cloud-CentOS-7-x86_64"
}

bhyve_vm2()
{
	vm_ram="4g"
	vm_cpus="2"
	imgsize="10g"
	vm_os_type="linux"
	vm_os_profile="cloud-CentOS-7-x86_64"

	CMD_RUN="date"
}

bhyve_vm3()
{
	cbsd_workdir="/env2"		# set alternative workdir

	vm_ram="4g"
	vm_cpus="2"
	imgsize="10g"
	vm_os_type="linux"
	vm_os_profile="cloud-CentOS-7-x86_64"
	CMD_RUN="date"
}

jail_test1()
{
	ip4_addr="DHCP"
	host_hostname="${jname}.example.com"
	pkg_bootstrap="0"
}

jail_test2()
{
	ip4_addr="DHCP"
	host_hostname="test2.my.domain"
	pkg_bootstrap="0"
}

postcreate_test2()
{
	# generate temp script and copy them to test2 jail

	file=$( mktemp )

	date >> ${file}

	jscp ${file} ${jname}:/root/readme.txt
	jexec jname=${jname} cat /root/readme.txt
}

jail_bash()
{
	ip4_addr="DHCP"
	host_hostname="test2.my.domain"
	pkg_bootstrap="1"
	pkglist="shells/bash"
}


bhyve_rmq1()
{
	vm_ram="4g"
	vm_cpus="2"
	imgsize="6g"
	vm_os_type="linux"
	vm_os_profile="cloud-CentOS-7-x86_64"

	ip4_addr="10.132.32.106"
	ip4_gw="10.132.32.254"
	fqdn="${jname}.test.inf.dev"

	# interface="vale1"
	interface="auto"
	ci_jname="${jname}"
	ci_fqdn="${fqdn}"
	ci_ip4_addr="${ip4_addr}"
	ci_gw4="${ip4_gw}"
	#imgtype="md"
	imgtype="zvol"
	runasap=1

	# wait for SSH ready
	ssh_wait=1
}

postcreate_rmq1()
{
	#bexec jname=${jname} sudo yum update -y

	# install puppet
	bexec jname=${jname} sudo yum -y install https://yum.puppet.com/puppet6-release-el-7.noarch.rpm
	bexec jname=${jname} sudo yum install -y puppet-agent
	bexec jname=${jname} sudo yum clean -y all

	# copy script and execute it to attach env to puppetserver ( just sample )
	#bscp ./prepare_pup.sh ${jname}:prepare_pup.sh
	#bexec jname=${jname} sudo /home/centos/prepare_pup.sh
	#echo "SIGN Puppet"
	# re-run puppet agent
	# bexec jname=${jname} sudo /opt/puppetlabs/bin/puppet agent -t
}
