#!/usr/local/bin/cbsd
#v10.1.0
MYARG=""
MYOPTARG="nat"
MYDESC="Enable NAT service for RFC1918 Networks"
ADDHELP="nat= name of framework. default in inventory config\n"

. ${subr}
. ${system}
. ${tools}
. ${initenv}

. ${cbsdinit}

[ -n "${nat}" ] && nat_enable="${nat}"

check_nat_ip()
{
	natoff nat=all
	/sbin/ping -c1 -S ${natip} ${natip} > /dev/null 2>&1 || err 1 "${MAGENTA}Cant assign nat address: ${GREEN}${natip}${MAGENTA}. Probably wrong ip. Nat cfg skipped${NORMAL}"
}

[ "${nat_enable}" = "0" ] && exit 0
# forwarding for NAT mode
${ECHO} "${MAGENTA}CBSD: Enable IP forwarding for NAT service${NORMAL}"
/sbin/sysctl net.inet6.ip6.forwarding=1 >/dev/null
/sbin/sysctl net.inet.ip.forwarding=1 >/dev/null

iptype ${natip} >/dev/null 2>&1
_ret=$?

# if natip is not valid IPv4, assume it is NIC variable.
# so try to find out first IPv4 for aliasing
case ${_ret} in
	1)
		# natip is valid IPv4
		_extiface="${CBSD_UPLINK_IFACE4}"
		;;
	2)
		# natip is valid IPv6
		_extiface="${CBSD_UPLINK_IFACE6}"
		;;
	*)
		_extiface="${natip}"
		natip=$( getip-by-nics nic=${_extiface} 2>/dev/null )
		if [ $? -ne 0 ]; then
			${ECHO} "${MAGENTA}Unable to determine first IP for nic: ${GREEN}${_extiface}${NORMAL}"
			return 1
		fi
		ok="${nat_enable}" # used by make_nat
		make_nat
		;;
esac

case "${nat_enable}" in
	"pf")
		[ ! -f "${etcdir}/pfnat.conf" ] && err 1 "${MAGENTA}No pfnat.conf. run ${GREEN}cbsd natcfg${MAGENTA} first${NORMAL}"
		/sbin/kldstat -qm pf || /sbin/kldload pf
		check_nat_ip
		${PFCTL_CMD} -f ${etcdir}/pfnat.conf
		${PFCTL_CMD} -e
	;;
	"ipfw")
		[ ! -f "${etcdir}/ipfw.conf" ] && err 1 "${MAGENTA}No ipfw.conf. run ${GREEN}cbsd natcfg${MAGENTA} first${NORMAL}"
		/sbin/kldstat -qm alias || /sbin/kldload libalias
		/sbin/kldstat -qm ipfw_nat || /sbin/kldload ipfw_nat
		check_nat_ip
		/bin/sh ${etcdir}/ipfw.conf
	;;
	"ipfilter")
		[ ! -f "${etcdir}/ipfilter.conf" ] && err 1 "No ipfilter.conf. run cbsd natcfg first"
		/sbin/kldstat -qm ipfilter || /sbin/kldload ipfilter
		check_nat_ip
		/sbin/ipnat -CF -f ${etcdir}/ipfilter.conf
	;;
esac
